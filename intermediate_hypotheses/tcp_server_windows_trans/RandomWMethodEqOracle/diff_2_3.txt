1c1
< digraph h2 {
---
> digraph h3 {
28a29,32
> s27 [label="s27"];
> s28 [label="s28"];
> s29 [label="s29"];
> s30 [label="s30"];
109,110c113,114
< s6 -> s1 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
< s6 -> s1 [label="RST(V,V,0)/TIMEOUT"];
---
> s6 -> s27 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
> s6 -> s27 [label="RST(V,V,0)/TIMEOUT"];
114c118
< s6 -> s1 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
---
> s6 -> s27 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
116c120
< s6 -> s1 [label="ACK+RST(V,V,0)/TIMEOUT"];
---
> s6 -> s27 [label="ACK+RST(V,V,0)/TIMEOUT"];
122,123c126,127
< s7 -> s1 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
< s7 -> s1 [label="RST(V,V,0)/TIMEOUT"];
---
> s7 -> s27 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
> s7 -> s27 [label="RST(V,V,0)/TIMEOUT"];
127c131
< s7 -> s1 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
---
> s7 -> s27 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
129c133
< s7 -> s1 [label="ACK+RST(V,V,0)/TIMEOUT"];
---
> s7 -> s27 [label="ACK+RST(V,V,0)/TIMEOUT"];
135,136c139,140
< s8 -> s1 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
< s8 -> s1 [label="RST(V,V,0)/TIMEOUT"];
---
> s8 -> s27 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
> s8 -> s27 [label="RST(V,V,0)/TIMEOUT"];
140c144
< s8 -> s1 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
---
> s8 -> s27 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
142c146
< s8 -> s1 [label="ACK+RST(V,V,0)/TIMEOUT"];
---
> s8 -> s27 [label="ACK+RST(V,V,0)/TIMEOUT"];
148,149c152,153
< s9 -> s1 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
< s9 -> s1 [label="RST(V,V,0)/TIMEOUT"];
---
> s9 -> s27 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
> s9 -> s27 [label="RST(V,V,0)/TIMEOUT"];
153c157
< s9 -> s1 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
---
> s9 -> s27 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
155c159
< s9 -> s1 [label="ACK+RST(V,V,0)/TIMEOUT"];
---
> s9 -> s27 [label="ACK+RST(V,V,0)/TIMEOUT"];
371c375
< s26 -> s1 [label="ACCEPT/TIMEOUT"];
---
> s26 -> s27 [label="ACCEPT/TIMEOUT"];
379a384,435
> s27 -> s1 [label="CLOSECONNECTION/TIMEOUT"];
> s27 -> s27 [label="ACK+PSH(V,V,1)/TIMEOUT"];
> s27 -> s27 [label="SYN+ACK(V,V,0)/TIMEOUT"];
> s27 -> s27 [label="RST(V,V,0)/TIMEOUT"];
> s27 -> s27 [label="ACCEPT/TIMEOUT"];
> s27 -> s27 [label="FIN+ACK(V,V,0)/TIMEOUT"];
> s27 -> s27 [label="LISTEN/TIMEOUT"];
> s27 -> s28 [label="SYN(V,V,0)/ACK+SYN(FRESH,NEXT,0)"];
> s27 -> s27 [label="RCV/TIMEOUT"];
> s27 -> s27 [label="ACK+RST(V,V,0)/TIMEOUT"];
> s27 -> s14 [label="CLOSE/TIMEOUT"];
> s27 -> s27 [label="SEND/TIMEOUT"];
> s27 -> s27 [label="ACK(V,V,0)/TIMEOUT"];
> s28 -> s2 [label="CLOSECONNECTION/TIMEOUT"];
> s28 -> s29 [label="ACK+PSH(V,V,1)/ACK(NEXT,NEXT,0)"];
> s28 -> s28 [label="SYN+ACK(V,V,0)/TIMEOUT"];
> s28 -> s27 [label="RST(V,V,0)/TIMEOUT"];
> s28 -> s28 [label="ACCEPT/TIMEOUT"];
> s28 -> s30 [label="FIN+ACK(V,V,0)/ACK(NEXT,NEXT,0)"];
> s28 -> s28 [label="LISTEN/TIMEOUT"];
> s28 -> s27 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
> s28 -> s28 [label="RCV/TIMEOUT"];
> s28 -> s27 [label="ACK+RST(V,V,0)/TIMEOUT"];
> s28 -> s5 [label="CLOSE/TIMEOUT"];
> s28 -> s28 [label="SEND/TIMEOUT"];
> s28 -> s29 [label="ACK(V,V,0)/TIMEOUT"];
> s29 -> s3 [label="CLOSECONNECTION/TIMEOUT"];
> s29 -> s29 [label="ACK+PSH(V,V,1)/ACK(NEXT,NEXT,0)"];
> s29 -> s14 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
> s29 -> s14 [label="RST(V,V,0)/TIMEOUT"];
> s29 -> s29 [label="ACCEPT/TIMEOUT"];
> s29 -> s30 [label="FIN+ACK(V,V,0)/ACK(NEXT,NEXT,0)"];
> s29 -> s29 [label="LISTEN/TIMEOUT"];
> s29 -> s14 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
> s29 -> s29 [label="RCV/TIMEOUT"];
> s29 -> s14 [label="ACK+RST(V,V,0)/TIMEOUT"];
> s29 -> s14 [label="CLOSE/ACK+RST(NEXT,CURRENT,0)"];
> s29 -> s29 [label="SEND/TIMEOUT"];
> s29 -> s29 [label="ACK(V,V,0)/TIMEOUT"];
> s30 -> s4 [label="CLOSECONNECTION/TIMEOUT"];
> s30 -> s30 [label="ACK+PSH(V,V,1)/TIMEOUT"];
> s30 -> s14 [label="SYN+ACK(V,V,0)/RST(NEXT,FRESH,0)"];
> s30 -> s14 [label="RST(V,V,0)/TIMEOUT"];
> s30 -> s30 [label="ACCEPT/TIMEOUT"];
> s30 -> s30 [label="FIN+ACK(V,V,0)/TIMEOUT"];
> s30 -> s30 [label="LISTEN/TIMEOUT"];
> s30 -> s14 [label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
> s30 -> s30 [label="RCV/TIMEOUT"];
> s30 -> s14 [label="ACK+RST(V,V,0)/TIMEOUT"];
> s30 -> s14 [label="CLOSE/ACK+RST(NEXT,CURRENT,0)"];
> s30 -> s30 [label="SEND/TIMEOUT"];
> s30 -> s30 [label="ACK(V,V,0)/TIMEOUT"];
