digraph h0 {
s0 [label="s0"];
s1 [label="s1"];
s2 [label="s2"];
s3 [label="s3"];
s4 [label="s4"];
s5 [label="s5"];
s6 [label="s6"];
s7 [label="s7"];
s8 [label="s8"];
s0 -> s1 [label="ConnectC2 / c1_ConnectionClosed(client_close)__c2_ConnAck"];
s0 -> s2 [label="ConnectC1WithWill / c1_ConnAck__c2_ConnectionClosed(client_close)"];
s0 -> s0 [label="PublishQoS0C2 / c1_ConnectionClosed(client_close)__c2_ConnectionClosed(client_close)"];
s0 -> s0 [label="PublishQoS1C1 / c1_ConnectionClosed(client_close)__c2_ConnectionClosed(client_close)"];
s0 -> s0 [label="SubscribeC1 / c1_ConnectionClosed(client_close)__c2_ConnectionClosed(client_close)"];
s0 -> s0 [label="UnSubScribeC1 / c1_ConnectionClosed(client_close)__c2_ConnectionClosed(client_close)"];
s0 -> s0 [label="SubscribeC2 / c1_ConnectionClosed(client_close)__c2_ConnectionClosed(client_close)"];
s0 -> s0 [label="UnSubScribeC2 / c1_ConnectionClosed(client_close)__c2_ConnectionClosed(client_close)"];
s0 -> s0 [label="DisconnectTCPC1 / c1_ConnectionClosed(client_close)__c2_ConnectionClosed(client_close)"];
s1 -> s1 [label="ConnectC2 / c1_ConnectionClosed(client_close)__Empty"];
s1 -> s3 [label="ConnectC1WithWill / c1_ConnAck__Empty"];
s1 -> s1 [label="PublishQoS0C2 / c1_ConnectionClosed(client_close)__Empty"];
s1 -> s1 [label="PublishQoS1C1 / c1_ConnectionClosed(client_close)__Empty"];
s1 -> s1 [label="SubscribeC1 / c1_ConnectionClosed(client_close)__Empty"];
s1 -> s1 [label="UnSubScribeC1 / c1_ConnectionClosed(client_close)__Empty"];
s1 -> s4 [label="SubscribeC2 / c1_ConnectionClosed(client_close)__c2_SubAck"];
s1 -> s1 [label="UnSubScribeC2 / c1_ConnectionClosed(client_close)__c2_UnSubAck"];
s1 -> s1 [label="DisconnectTCPC1 / c1_ConnectionClosed(client_close)__Empty"];
s2 -> s3 [label="ConnectC2 / Empty__c2_ConnAck"];
s2 -> s2 [label="ConnectC1WithWill / Empty__c2_ConnectionClosed(client_close)"];
s2 -> s2 [label="PublishQoS0C2 / Empty__c2_ConnectionClosed(client_close)"];
s2 -> s2 [label="PublishQoS1C1 / c1_PubAck__c2_ConnectionClosed(client_close)"];
s2 -> s5 [label="SubscribeC1 / c1_SubAck__c2_ConnectionClosed(client_close)"];
s2 -> s2 [label="UnSubScribeC1 / c1_UnSubAck__c2_ConnectionClosed(client_close)"];
s2 -> s2 [label="SubscribeC2 / Empty__c2_ConnectionClosed(client_close)"];
s2 -> s2 [label="UnSubScribeC2 / Empty__c2_ConnectionClosed(client_close)"];
s2 -> s0 [label="DisconnectTCPC1 / c1_ConnectionClosed(client_close)__c2_ConnectionClosed(client_close)"];
s3 -> s3 [label="ConnectC2 / Empty__Empty"];
s3 -> s3 [label="ConnectC1WithWill / Empty__Empty"];
s3 -> s3 [label="PublishQoS0C2 / Empty__Empty"];
s3 -> s3 [label="PublishQoS1C1 / c1_PubAck__Empty"];
s3 -> s6 [label="SubscribeC1 / c1_SubAck__Empty"];
s3 -> s3 [label="UnSubScribeC1 / c1_UnSubAck__Empty"];
s3 -> s7 [label="SubscribeC2 / Empty__c2_SubAck"];
s3 -> s3 [label="UnSubScribeC2 / Empty__c2_UnSubAck"];
s3 -> s1 [label="DisconnectTCPC1 / c1_ConnectionClosed(client_close)__Empty"];
s4 -> s4 [label="ConnectC2 / c1_ConnectionClosed(client_close)__Empty"];
s4 -> s7 [label="ConnectC1WithWill / c1_ConnAck__Empty"];
s4 -> s4 [label="PublishQoS0C2 / c1_ConnectionClosed(client_close)__Pub(c2,my_topic,messageQos0)"];
s4 -> s4 [label="PublishQoS1C1 / c1_ConnectionClosed(client_close)__Empty"];
s4 -> s4 [label="SubscribeC1 / c1_ConnectionClosed(client_close)__Empty"];
s4 -> s4 [label="UnSubScribeC1 / c1_ConnectionClosed(client_close)__Empty"];
s4 -> s4 [label="SubscribeC2 / c1_ConnectionClosed(client_close)__c2_SubAck"];
s4 -> s1 [label="UnSubScribeC2 / c1_ConnectionClosed(client_close)__c2_UnSubAck"];
s4 -> s4 [label="DisconnectTCPC1 / c1_ConnectionClosed(client_close)__Empty"];
s5 -> s6 [label="ConnectC2 / Empty__c2_ConnAck"];
s5 -> s5 [label="ConnectC1WithWill / Empty__c2_ConnectionClosed(client_close)"];
s5 -> s5 [label="PublishQoS0C2 / Empty__c2_ConnectionClosed(client_close)"];
s5 -> s5 [label="PublishQoS1C1 / Pub(c1,my_topic,messageQos1)__c1_PubAck__c2_ConnectionClosed(client_close)"];
s5 -> s5 [label="SubscribeC1 / c1_SubAck__c2_ConnectionClosed(client_close)"];
s5 -> s2 [label="UnSubScribeC1 / c1_UnSubAck__c2_ConnectionClosed(client_close)"];
s5 -> s5 [label="SubscribeC2 / Empty__c2_ConnectionClosed(client_close)"];
s5 -> s5 [label="UnSubScribeC2 / Empty__c2_ConnectionClosed(client_close)"];
s5 -> s0 [label="DisconnectTCPC1 / c1_ConnectionClosed(client_close)__c2_ConnectionClosed(client_close)"];
s6 -> s6 [label="ConnectC2 / Empty__Empty"];
s6 -> s6 [label="ConnectC1WithWill / Empty__Empty"];
s6 -> s6 [label="PublishQoS0C2 / Pub(c1,my_topic,messageQos0)__Empty"];
s6 -> s6 [label="PublishQoS1C1 / Pub(c1,my_topic,messageQos1)__c1_PubAck__Empty"];
s6 -> s6 [label="SubscribeC1 / c1_SubAck__Empty"];
s6 -> s3 [label="UnSubScribeC1 / c1_UnSubAck__Empty"];
s6 -> s8 [label="SubscribeC2 / Empty__c2_SubAck"];
s6 -> s6 [label="UnSubScribeC2 / Empty__c2_UnSubAck"];
s6 -> s1 [label="DisconnectTCPC1 / c1_ConnectionClosed(client_close)__Empty"];
s7 -> s7 [label="ConnectC2 / Empty__Empty"];
s7 -> s7 [label="ConnectC1WithWill / Empty__Empty"];
s7 -> s7 [label="PublishQoS0C2 / Empty__Pub(c2,my_topic,messageQos0)"];
s7 -> s7 [label="PublishQoS1C1 / c1_PubAck__Pub(c2,my_topic,messageQos1)"];
s7 -> s8 [label="SubscribeC1 / c1_SubAck__Empty"];
s7 -> s7 [label="UnSubScribeC1 / c1_UnSubAck__Empty"];
s7 -> s7 [label="SubscribeC2 / Empty__c2_SubAck"];
s7 -> s3 [label="UnSubScribeC2 / Empty__c2_UnSubAck"];
s7 -> s4 [label="DisconnectTCPC1 / c1_ConnectionClosed(client_close)__Pub(c2,my_topic,bye)"];
s8 -> s8 [label="ConnectC2 / Empty__Empty"];
s8 -> s8 [label="ConnectC1WithWill / Empty__Empty"];
s8 -> s8 [label="PublishQoS0C2 / Pub(c1,my_topic,messageQos0)__Pub(c2,my_topic,messageQos0)"];
s8 -> s8 [label="PublishQoS1C1 / Pub(c1,my_topic,messageQos1)__c1_PubAck__Pub(c2,my_topic,messageQos1)"];
s8 -> s8 [label="SubscribeC1 / c1_SubAck__Empty"];
s8 -> s7 [label="UnSubScribeC1 / c1_UnSubAck__Empty"];
s8 -> s8 [label="SubscribeC2 / Empty__c2_SubAck"];
s8 -> s6 [label="UnSubScribeC2 / Empty__c2_UnSubAck"];
s8 -> s4 [label="DisconnectTCPC1 / c1_ConnectionClosed(client_close)__Pub(c2,my_topic,bye)"];
__start0 [shape=none, label=""];
__start0 -> s0 [label=""];
}
